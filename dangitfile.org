#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: dangitfile
#+date: <2020-05-29 Fri>
#+author: Skye Srinivasan Harith
#+email: kaushik.harith@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 26.3 (Org mode 9.3.6)


** COMMENT Reddit in emacs with Md4rd
   xVdkVJ78cc4TtrZoocploxm0Hws
   #+begin_src emacs-lisp
     (use-package md4rd
       :ensure t
       :bind
       (:map md4rd-mode-map
	     ("u" . tree-mode-goto-parent)
	     ("o" . md4rd-open)
	     ("v" . md4rd-visit)
	     ("e" . tree-mode-toggle-expand)
	     ("E" . md4rd-widget-expand-all)
	     ("C" . md4rd-widget-collapse-all)
	     ("n" . widget-forward)
	     ("j" . widget-forward)
	     ("h" . backward-button)
	     ("p" . widget-backward)
	     ("k" . widget-backward)
	     ("l" . forward-button)
	     ("q" . kill-current-buffer)
	     ("r" . md4rd-reply)
	     ("u" . md4rd-upvote)
	     ("d" . md4rd-downvote)
	     ("t" . md4rd-widget-toggle-line))
       :config
       (setq md4rd-subs-active '(emacs lisp+Common_Lisp prolog clojure))
       (setq md4rd--oauth-access-token
	     "xVdkVJ78cc4TtrZoocploxm0Hws")
       (setq md4rd--oauth-refresh-token
	     "")
       (run-with-timer 0 3540 'md4rd-refresh-login))
   #+end_src
** COMMENT dired Filter
   #+begin_src emacs-lisp
     (use-package dired-filter
       :ensure t)
   #+end_src
** COMMENT Travel by sub-words
   #+begin_src emacs-lisp
     (gloabl-subword-mode 1)
   #+end_src
** COMMENT Auto switch to new buffers
   DO NOT RUN THIS. WILL CRASH YOUR SYSTEM 
   #+begin_src emacs-lisp
     (defun skye/switch-to-new-buffer ()
       "Switch to newest created buffer."
       (interactive)
       (let (new-buffer-list '(nth 0 (buffer-list))) (switch-to-buffer newest-buffer))
       )

     (add-hook 'buffer-list-update-hook 'skye/switch-to-new-buffer)

     (buffer-list)
   #+end_src
** COMMENT Smart Parens Mode
   #+begin_src emacs-lisp
     (use-package smartparens
       :ensure t
       :diminish ""
       :hook
       (emacs-lisp-mode . smartparens-mode)
       (LaTex-mode . smartparens-mode)
       (python-mode . smartparens-mode)
       :config
       (sp-local-pair 'LaTeX-mode "`" nil :actions :rem)
       )
   #+end_src
